---
source: crates/compiler/backend/tests/bytecode.rs
expression: "BytecodePrinter::new(&bundle, bundle_len)"
input_file: crates/compiler/backend/tests/data/patmat.reds
---
// Scriptable::IsA;CName (f0)

// TestArray;array<Int32> (f1)
switch 5
true.const
switch.label 248 39
invoke.static j39 l4 f2 0000000000000000
array.size 0
param 0
i32.const 3
param.end
assign
local 0
array.element 0
param 0
invoke.static j39 l4 f3 0000000000000000
array.size 0
param 0
i32.const 3
param.end
assign
local 1
array.element 0
param 0
invoke.static j39 l4 f3 0000000000000000
array.size 0
param 0
i32.const 2
param.end
assign
local 2
array.element 0
param 0
invoke.static j35 l4 f3 0000000000000000
array.size 0
param 0
i32.one
param.end
return
local 0
switch.label 109 39
invoke.static j39 l6 f2 0000000000000000
array.size 0
param 0
i32.const 2
param.end
assign
local 3
array.element 0
param 0
i32.zero
assign
local 4
array.element 0
param 0
i32.one
return
local 4
switch.label 76 35
invoke.static j35 l8 f4 0000000000000000
array.size 0
param 0
i32.one
param.end
assign
local 5
array.element 0
param 0
i32.zero
return
local 5
switch.default
return
i32.zero
assign
local 6
param 0
assign
local 7
param 0
assign
local 8
param 0
jump.if_not 249
invoke.static j39 l14 f2 0000000000000000
array.size 0
local 6
i32.const 3
param.end
assign
local 9
array.element 0
local 6
invoke.static j39 l14 f3 0000000000000000
array.size 0
local 6
i32.const 3
param.end
assign
local 10
array.element 0
local 6
invoke.static j39 l14 f3 0000000000000000
array.size 0
local 6
i32.const 2
param.end
assign
local 11
array.element 0
local 6
invoke.static j35 l14 f3 0000000000000000
array.size 0
local 6
i32.one
param.end
return
local 9
jump 195
jump.if_not 110
invoke.static j39 l16 f2 0000000000000000
array.size 0
local 7
i32.const 2
param.end
assign
local 12
array.element 0
local 7
i32.zero
assign
local 13
array.element 0
local 7
i32.one
return
local 13
jump 82
jump.if_not 77
invoke.static j35 l18 f4 0000000000000000
array.size 0
local 8
i32.one
param.end
assign
local 14
array.element 0
local 8
i32.zero
return
local 14
jump 2
return
i32.zero

// TestNullable;Class (f5)
switch 5
true.const
switch.label 41 10
ref.to_bool
param 1
assign
local 15
param 1
return
local 15
switch.default
return
ref.null
assign
local 16
param 1
jump.if_not 42
ref.to_bool
local 16
assign
local 17
local 16
return
local 17
jump 2
return
ref.null

// TestNullableWref;Class (f6)
switch 5
true.const
switch.label 43 11
ref.to_bool
wref.to_ref
param 2
assign
local 18
param 2
return
wref.to_ref
local 18
switch.default
return
ref.null
assign
local 19
param 2
jump.if_not 44
ref.to_bool
wref.to_ref
local 19
assign
local 20
local 19
return
wref.to_ref
local 20
jump 2
return
ref.null

// TestDestructure;Class (f7)
switch 5
true.const
switch.label 80 37
ctx 34
param 3
invoke.virtual j25 l57 f0 0000000000000000
cname.const 1
param.end
assign
local 21
ctx 18
param 3
object.field 0
return
local 21
switch.label 90 37
ctx 34
param 3
invoke.virtual j25 l59 f0 0000000000000000
cname.const 2
param.end
assign
local 22
ctx 18
param 3
object.field 1
return
array.element 0
local 22
i32.zero
switch.default
return
i32.zero
assign
local 23
param 3
assign
local 24
param 3
jump.if_not 81
ctx 34
local 23
invoke.virtual j25 l65 f0 0000000000000000
cname.const 1
param.end
assign
local 25
ctx 18
local 23
object.field 0
return
local 25
jump 96
jump.if_not 91
ctx 34
local 24
invoke.virtual j25 l67 f0 0000000000000000
cname.const 2
param.end
assign
local 26
ctx 18
local 24
object.field 1
return
array.element 0
local 26
i32.zero
jump 2
return
i32.zero

// TestDestructureWref;Class (f8)
switch 5
true.const
switch.label 82 38
ctx 35
wref.to_ref
param 4
invoke.virtual j25 l76 f0 0000000000000000
cname.const 1
param.end
assign
local 27
ctx 19
wref.to_ref
param 4
object.field 0
return
local 27
switch.label 92 38
ctx 35
wref.to_ref
param 4
invoke.virtual j25 l78 f0 0000000000000000
cname.const 2
param.end
assign
local 28
ctx 19
wref.to_ref
param 4
object.field 1
return
array.element 0
local 28
i32.zero
switch.default
return
i32.zero
assign
local 29
param 4
assign
local 30
param 4
jump.if_not 83
ctx 35
wref.to_ref
local 29
invoke.virtual j25 l84 f0 0000000000000000
cname.const 1
param.end
assign
local 31
ctx 19
wref.to_ref
local 29
object.field 0
return
local 31
jump 98
jump.if_not 93
ctx 35
wref.to_ref
local 30
invoke.virtual j25 l86 f0 0000000000000000
cname.const 2
param.end
assign
local 32
ctx 19
wref.to_ref
local 30
object.field 1
return
array.element 0
local 32
i32.zero
jump 2
return
i32.zero

// TestCast;Class (f9)
switch 5
true.const
switch.label 80 37
ctx 34
param 5
invoke.virtual j25 l95 f0 0000000000000000
cname.const 1
param.end
assign
local 33
param 5
return
ctx 18
local 33
object.field 0
switch.label 90 37
ctx 34
param 5
invoke.virtual j25 l97 f0 0000000000000000
cname.const 2
param.end
assign
local 34
param 5
return
array.element 0
ctx 18
local 34
object.field 1
i32.zero
switch.default
return
i32.zero
assign
local 35
param 5
assign
local 36
param 5
jump.if_not 81
ctx 34
local 35
invoke.virtual j25 l103 f0 0000000000000000
cname.const 1
param.end
assign
local 37
local 35
return
ctx 18
local 37
object.field 0
jump 96
jump.if_not 91
ctx 34
local 36
invoke.virtual j25 l105 f0 0000000000000000
cname.const 2
param.end
assign
local 38
local 36
return
array.element 0
ctx 18
local 38
object.field 1
i32.zero
jump 2
return
i32.zero

// TestWhile;Class (f10)
assign
local 39
param 6
jump.if_not 157
true.const
assign
local 40
local 39
jump.if_not 128
invoke.static j75 l114 f11 0000000000000000
ctx 34
local 40
invoke.virtual j25 l114 f0 0000000000000000
cname.const 3
param.end
ref.to_bool
ctx 18
local 40
object.field 2
param.end
assign
local 41
ctx 18
local 40
object.field 2
assign
local 39
local 41
jump 3
jump 3
jump -160
return
local 39

// TestWhileArray;array<Int32> (f12)
jump.if_not 148
true.const
assign
local 42
param 7
jump.if_not 119
invoke.static j35 l121 f2 0000000000000000
array.size 0
local 42
i32.one
param.end
assign
local 43
array.element 0
local 42
invoke.static j35 l121 f3 0000000000000000
array.size 0
local 42
i32.one
param.end
array.pop 0
param 7
jump 3
jump 3
jump -151

// OperatorGreaterEqual (f2)

// OperatorSubtract (f3)

// OperatorEqual (f4)

// OperatorLogicAnd (f11)
