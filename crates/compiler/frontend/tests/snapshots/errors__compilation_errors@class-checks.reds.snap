---
source: crates/compiler/frontend/tests/errors.rs
expression: "DisplayDiagnostics(reporter.into_reported(), &sources)"
input_file: crates/compiler/frontend/tests/data/class-checks.reds
---
[SYM_REDEFINITION] At tests/data/class-checks.reds:25:7
class ClassDefinedTwice {}
      ^^^^^^^^^^^^^^^^^
this name is already defined in the scope

[INVALID_ANN_USE] At tests/data/class-checks.reds:21:1
@badAnnotation()
^^^^^^^^^^^^^^^^
`badAnnotation` is not a valid annotation in this context

[UNEXPECTED_NATIVE] At tests/data/class-checks.reds:51:14
  native let field: Int32;
             ^^^^^
scripted types are not allowed to have native members

[UNEXPECTED_NATIVE] At tests/data/class-checks.reds:53:15
  native func NativeMethod()
              ^^^^^^^^^^^^
scripted types are not allowed to have native members

[INVALID_PERSISTENT] At tests/data/class-checks.reds:57:18
  persistent let string: String;
                 ^^^^^^
strings, variants and resources cannot be marked as persistent

[INVALID_PERSISTENT] At tests/data/class-checks.reds:58:18
  persistent let variant: Variant;
                 ^^^^^^^
strings, variants and resources cannot be marked as persistent

[INVALID_PERSISTENT] At tests/data/class-checks.reds:59:18
  persistent let res: ResRef;
                 ^^^
strings, variants and resources cannot be marked as persistent

[MISSING_BODY] At tests/data/class-checks.reds:67:8
  func MethodA(a: A)
       ^^^^^^^
this function must have a body

[MISSING_BODY] At tests/data/class-checks.reds:68:8
  func MethodB() -> B
       ^^^^^^^
this function must have a body

[NON_STATIC_STRUCT_FN] At tests/data/class-checks.reds:47:8
  func Method() {}
       ^^^^^^
struct methods must be static

[SYM_REDEFINITION] At tests/data/class-checks.reds:87:21
@nameImplementation(ClashingIntStruct as GenericStruct<Int32>)
                    ^^^^^^^^^^^^^^^^^
this name is already defined in the scope

[DUP_IMPL] At tests/data/class-checks.reds:89:46
@nameImplementation(DuplicateStringStruct as GenericStruct<String>)
                                             ^^^^^^^^^^^^^^^^^^^^^
this implementation is a duplicate of a previous one

[INVALID_BASE] At tests/data/class-checks.reds:4:7
class ClassExtendingStruct extends Struct {}
      ^^^^^^^^^^^^^^^^^^^^
this type cannot inherit from a struct

[INVALID_BASE] At tests/data/class-checks.reds:19:7
class ClassExtendingPrimitive extends Int32 {}
      ^^^^^^^^^^^^^^^^^^^^^^^
this type cannot inherit from a primitive

[INVALID_TYPE_ARG_COUNT] At tests/data/class-checks.reds:37:7
class ClassWithInvalidTypeArgCounts extends AbstractClass<Int32, Int32> {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
type `AbstractClass` expects 1 type arguments

[INVALID_TYPE_ARG_COUNT] At tests/data/class-checks.reds:38:7
  let field: AbstractClass;
      ^^^^^
type `AbstractClass` expects 1 type arguments

[INVALID_TYPE_ARG_COUNT] At tests/data/class-checks.reds:40:15
  func Method(a: AbstractClass) -> AbstractClass<String, String> {}
              ^^^^^^^^^^^^^^^^
type `AbstractClass` expects 1 type arguments

[INVALID_BASE] At tests/data/class-checks.reds:43:7
class CircularClassA extends CircularClassB {}
      ^^^^^^^^^^^^^^
this class circularly extends itself

[INVALID_VARIANCE] At tests/data/class-checks.reds:67:16
  func MethodA(a: A)
               ^^^^
the type `A` appears in contravariant position, which is incompatible with its declaration

[INVALID_VARIANCE] At tests/data/class-checks.reds:68:8
  func MethodB() -> B
       ^^^^^^^
the type `B` appears in covariant position, which is incompatible with its declaration

[UNSASTISFIED_BOUND] At tests/data/class-checks.reds:80:7
class ClassViolatingBound extends ClassWithBound<Chair> {}
      ^^^^^^^^^^^^^^^^^^^
type `Chair` does not satisfy expected bound `Animal`

[DUP_METHOD] At tests/data/class-checks.reds:27:7
class ClassWithDuplicateMethod {
      ^^^^^^^^^^^^^^^^^^^^^^^^
this class contains a duplicated implementation of the `Method` method

[MISSING_IMPL] At tests/data/class-checks.reds:13:7
class IncompleteClass extends AbstractClass<Int32> {}
      ^^^^^^^^^^^^^^^
this class is missing some required method implementation(s):
  func UnimplementedMethod(a: Int32) -> Void

[FINAL_FN_OVERRIDE] At tests/data/class-checks.reds:32:7
class ClassOverridingFinalMethod extends AbstractClass<Int32> {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
this class overrides a final method `FinalMethod`

[MISSING_IMPL] At tests/data/class-checks.reds:37:7
class ClassWithInvalidTypeArgCounts extends AbstractClass<Int32, Int32> {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
this class is missing some required method implementation(s):
  func UnimplementedMethod(a: Int32) -> Void

[CALLING_BASE_STATIC_METHOD] At tests/data/class-checks.reds:93:3
  CompleteClass.StaticMethod(42);
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
calling a static method of `AbstractClass` from its subclass, use `AbstractClass.StaticMethod` instead
